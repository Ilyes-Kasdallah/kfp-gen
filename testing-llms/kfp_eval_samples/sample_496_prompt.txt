You are an MLOps engineer. Write a Kubeflow pipeline based on the following description and code logic:

A pipeline to randomly sample calls and upload for annotating turns for intents & entities and annotating calls for slots & call level metrics.      .. _p_fetch_n_tag_turns_and_calls:      Example payload to invoke via slack integrations:          @charon run fetch_n_tag_turns_and_calls          .. code-block:: python              {                 "client_id": 41,                 "org_id": 34,                 "lang": "en",                 "start_date": "2022-11-10",                 "end_date": "2022-11-11",                 "labelstudio_project_id": 195,                 "call_project_id": 194,                 "data_label": "Client"             }      To use labelstudio:          @charon run fetch_n_tag_turns_and_calls          .. code-block:: python              {                 "org_id": 34,                 "client_id": 41,                 "start_date": "2022-09-16",                 "end_date": "2022-09-19",                 "lang": "en",                 "reported": false,                 "call_quantity": 1000,                 "flow_name" : "indigo_domain_tuning_english"                 "labelstudio_project_id": "135",                 "call_project_id": 194             }      :param client_id: The comma separated client ids as per fsm db.     :type client_id: str, optional      :param org_id: The organization id as per api-gateway.     :type org_id: str      :param labelstudio_project_id: The labelstudio project id for turn level tagging (intent & entities) (this is a number) since this is optional, defaults to "".     :type labelstudio_project_id: str      :param call_project_id: The labelstudio project id for call level tagging (slots & call metrics) (this is a number) since this is optional, defaults to "".     :type call_project_id: str      :param data_label: A label to identify the source of a datapoint     :type data_label: str, optional. Defaults to "Live"      :param start_date: The start date range to filter calls in YYYY-MM-DD format.     :type start_date: str      :param lang: The language code of the calls to filter. eg: en, hi, ta, te, etc.     :type lang: str      :param end_date: The end date range to filter calls in YYYY-MM-DD format.     :type end_date: str      :param ignore_callers: Comma separated list of callers to ignore, defaults to ""     :type ignore_callers: str, optional      :param reported: Pick only reported calls, defaults to False     :type reported: bool      :param template_id: The flow template id to filter calls, defaults to ""     :type template_id: str, optional      :param use_case: Voice bot project's use-case, defaults to ""     :type use_case: str, optional      :param flow_name: Identifier for a whole/part of a voicebot conversation flow, defaults to ""     :type flow_name: str, optional      :param min_duration: Call duration filter, defaults to ""     :type min_duration: str, optional      :param asr_provider: The ASR vendor (google/VASR), defaults to ""     :type asr_provider: str, optional      :param states: Filter calls in a comma separated list of states, defaults to ""     :type states: str, optional      :param intents: Filter turns in sampled calls from a comma separated list of intents, defaults to ""     :type intents: str, optional      :param start_date_offset: Offset the start date by an integer value, defaults to 0     :type start_date_offset: int, optional      :param end_date_offset: Offset the end date by an integer value, defaults to 0     :type end_date_offset: int, optional      :param start_time_offset: Offset the start time by an integer value, defaults to 0     :type start_time_offset: int, optional      :param end_time_offset: Offset the end time by an integer value, defaults to 0     :type end_time_offset: int, optional      :param calls_file_s3_path: The s3_path to upload the turns from instead of querying from FSM_db, defaults to ""     :type calls_file_s3_path: str, optional      :param call_quantity: Number of calls to sample, defaults to 200     :type call_quantity: int, optional      :param call_type: INBOUND, OUTBOUND, or CALL_TEST call filters. We can currently choose only one of these, or defaults to "INBOUND" and "OUTBOUND" both     :type call_type: str, optional      :param notify: Whether to send a slack notification, defaults to ""     :type notify: str, optional      :param channel: The slack channel to send the notification, defaults to ""     :type channel: str, optional      :param slack_thread: The slack thread to send the notification, defaults to ""     :type slack_thread: float, optional      :param use_fsm_url: Whether to use turn audio url from fsm or s3 path., defaults to False     :type use_fsm_url: bool, optional      :param remove_empty_audios: Whether to turns of empty audio., defaults to False     :type remove_empty_audios: bool, optional      :param use_assisted_annotation: Whether to use GPT for intent prediction, only applicable to US collections, defaults to False     :type use_assisted_annotation: bool, optional          :param flow_ids: Id for a whole/part of a voicebot conversation flow, defaults to ""     :type flow_ids: str, optional # Get intent response from GPT for qualifying turns # uploads data for turn level intent, entity & transcription tagging # uploads data for call & slot level tagging to labelstudio