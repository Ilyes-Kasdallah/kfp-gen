You are an MLOps engineer. Write a Kubeflow pipeline based on the following description and code logic:

Trigger a batch prediction job and enable monitoring.      Args:         model (Input[Model]): Input model to use for calculating predictions.         job_display_name: Name of the batch prediction job.         location (str): location of the Google Cloud project. Defaults to None.         project (str): project id of the Google Cloud project. Defaults to None.         source_uri (str): bq:// URI or a list of gcs:// URIs to read input instances.         destination_uri (str): bq:// or gs:// URI to store output predictions.         source_format (str): E.g. "bigquery", "jsonl", "csv". See:             https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform_v1beta1.types.BatchPredictionJob.InputConfig         destination_format (str): E.g. "bigquery", "jsonl", "csv". See:             https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform_v1beta1.types.BatchPredictionJob.OutputConfig         machine_type (str): Machine type.         starting_replica_count (int): Starting replica count.         max_replica_count (int): Max replicat count.         monitoring_skew_config (dict): Configuration of training-serving skew. See:             https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform_v1beta1.types.ModelMonitoringObjectiveConfig.TrainingPredictionSkewDetectionConfig         monitoring_alert_email_addresses (List[str]):             Email addresses to send alerts to (optional).         notification_channels (List[str]):             Notification channels to send alerts to (optional).             Format: projects/<project>/notificationChannels/<notification_channel>         monitoring_training_dataset (dict): Metadata of training dataset. See:             https://cloud.google.com/python/docs/reference/aiplatform/latest/google.cloud.aiplatform_v1beta1.types.ModelMonitoringObjectiveConfig.TrainingDataset         instance_config (dict): Configuration defining how to transform batch prediction             input instances to the instances that the Model accepts. See:             https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.batchPredictionJobs#instanceconfig     Returns:         OutputPath: gcp_resources for Vertex AI UI integration. # output GCP resource for Vertex AI UI integration # return GCP resource for Vertex AI UI integration